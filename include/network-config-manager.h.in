/* SPDX-License-Identifier: Apache-2.0
 * Copyright Â© 2023 VMware, Inc.
 */

#pragma once

#include <bits/stdint-uintn.h>
#include <stdbool.h>
#include <gmodule.h>

int ncm_add_dns_server(int argc, char *argv[]);
int ncm_get_dns_server(char ***ret);
int ncm_show_dns_server(int argc, char *argv[]);
int ncm_show_dns_servers_and_mode(int argc, char *argv[]);
int ncm_get_dns_mode(int argc, char *argv[]);

int ncm_add_dns_domains(int argc, char *argv[]);
int ncm_show_dns_server_domains(int argc, char *argv[]);
int ncm_get_dns_domains(char ***ret);

int ncm_display_one_link_addresses(int argc, char *argv[]);
int ncm_link_get_addresses(const char *ifname, char ***ret);
int ncm_link_add_address(int argc, char *argv[]);
int ncm_link_delete_address(int argc, char *argv[]);

int ncm_link_add_default_gateway(int argc, char *argv[]);
int ncm_link_add_route(int argc, char *argv[]);
int ncm_link_delete_gateway_or_route(int argc, char *argv[]);
int ncm_link_get_routes(char *ifname, char ***ret);
int ncm_link_add_additional_gw(int argc, char *argv[]);

int ncm_link_add_routing_policy_rules(int argc, char *argv[]);
int ncm_link_remove_routing_policy_rules(int argc, char *argv[]);

int ncm_link_add_ntp(int argc, char *argv[]);
int ncm_link_get_ntp(const char *ifname, char ***ret);
int ncm_link_delete_ntp(int argc, char *argv[]);

int ncm_link_set_dhcp4_client_identifier(int argc, char *argv[]);
int ncm_link_get_dhcp4_client_identifier(const char *ifname, char **ret);

int ncm_link_set_dhcp4_section(int argc, char *argv[]);
int ncm_link_set_dhcp6_section(int argc, char *argv[]);

int ncm_link_set_link_local_address(int argc, char *argv[]);

int ncm_link_set_dhcp_client_duid(int argc, char *argv[]);

int ncm_link_get_dhcp_client_iaid(char *ifname, uint32_t *ret);
int ncm_link_set_dhcp_client_iaid(int argc, char *argv[]);

int ncm_link_set_dhcp_mode(int argc, char *argv[]);
int ncm_link_get_dhcp_mode(const char *ifname, int *ret);

int ncm_link_set_mac(int argc, char *argv[]);
int ncm_link_get_mac(const char *ifname, char **ret);

int ncm_link_set_mode(int argc, char *argv[]);
int ncm_link_set_option(int argc, char *argv[]);

int ncm_link_set_group(int argc, char *argv[]);
int ncm_link_set_rf_online(int argc, char *argv[]);
int ncm_link_set_act_policy(int argc, char *argv[]);

int ncm_link_set_mtu(int argc, char *argv[]);
int ncm_link_acquire_mtu(const char *ifname, uint32_t *ret);

int ncm_link_set_network_ipv6_mtu(int argc, char *argv[]);

int ncm_link_set_network_section(int argc, char *argv[]);
int ncm_link_status(int argc, char *argv[]);
int ncm_link_update_state(int argc, char *argv[]);

int ncm_network_reload(int argc, char *argv[]);
int ncm_link_reconfigure(int argc, char *argv[]);

int ncm_link_enable_ipv6(int argc, char *argv[]);

int ncm_revert_resolve_link(int argc, char *argv[]);

int ncm_set_system_hostname(int argc, char *argv[]);
int ncm_get_system_hostname(char **ret);

int ncm_link_add_dhcpv4_server(int argc, char *argv[]);
int ncm_link_remove_dhcpv4_server(int argc, char *argv[]);

int ncm_link_add_dhcpv4_server_static_address(int argc, char *argv[]);
int ncm_link_remove_dhcpv4_server_static_address(int argc, char *argv[]);

int ncm_link_add_ipv6_router_advertisement(int argc, char *argv[]);
int ncm_link_remove_ipv6_router_advertisement(int argc, char *argv[]);

int ncm_show_version(void);

int ncm_create_vlan(int argc, char *argv[]);
int ncm_create_bridge(int argc, char *argv[]);
int ncm_create_bond(int argc, char *argv[]);
int ncm_create_vxlan(int argc, char *argv[]);
int ncm_create_macvlan(int argc, char *argv[]);
int ncm_create_ipvlan(int argc, char *argv[]);
int ncm_create_vrf(int argc, char *argv[]);
int ncm_create_veth(int argc, char *argv[]);
int ncm_create_tunnel(int argc, char *argv[]);
int ncm_create_wireguard_tunnel(int argc, char *argv[]);
int ncm_create_tun_tap(int argc, char *argv[]);

int ncm_remove_netdev(int argc, char *argv[]);

int ncm_link_show_network_config(int argc, char *argv[]);
int ncm_link_edit_network_config(int argc, char *argv[]);
int ncm_link_edit_link_config(int argc, char *argv[]);

int ncm_configure_link(int argc, char *argv[]);
int ncm_configure_link_features(int argc, char *argv[]);
int ncm_configure_link_buf_size(int argc, char *argv[]);
int ncm_configure_link_queue_size(int argc, char *argv[]);
int ncm_configure_link_flow_control(int argc, char *argv[]);
int ncm_configure_link_gso(int argc, char *argv[]);
int ncm_configure_link_mac(int argc, char *argv[]);
int ncm_configure_link_name(int argc, char *argv[]);
int ncm_configure_link_altname(int argc, char *argv[]);
int ncm_configure_link_channel(int argc, char *argv[]);
int ncm_configure_link_coalesce(int argc, char *argv[]);
int ncm_configure_link_coald_frames(int argc, char *argv[]);
int ncm_configure_link_coal_pkt(int argc, char *argv[]);

int ncm_configure_sr_iov(int argc, char *argv[]);

int ncm_configure_proxy(int argc, char *argv[]);
int ncm_show_proxy(int argc, char *argv[]);
int ncm_get_proxy(char ***proxy);

int ncm_system_ipv4_status(int argc, char *argv[]);
int ncm_system_status(int argc, char *argv[]);
bool ncm_is_netword_running(void);

int ncm_nft_add_tables(int argc, char *argv[]);
int ncm_nft_show_tables(int argc, char *argv[]);
int ncm_nft_get_tables(const char *family, const char *table, char ***ret);
int ncm_nft_delete_table(int argc, char *argv[]);

int ncm_nft_add_chain(int argc, char *argv[]);
int ncm_nft_show_chains(int argc, char *argv[]);
int ncm_nft_get_chains(char *family, const char *table, const char *chain, char ***ret);
int ncm_nft_delete_chain(int argc, char *argv[]);

int ncm_nft_add_rule_port(int argc, char *argv[]);
int ncm_nft_show_rules(int argc, char *argv[]);
int ncm_get_nft_rules(const char *table, char **ret);
int ncm_nft_delete_rule(int argc, char *argv[]);
int ncm_nft_run_command(int argc, char *argv[]);

int ncm_get_system_status(char **ret);
int ncm_get_link_status(const char *ifname, char **ret);
